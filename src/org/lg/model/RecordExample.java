package org.lg.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RecordExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public RecordExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	protected RecordExample(RecordExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table record
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andCreattimeIsNull() {
			addCriterion("creatTime is null");
			return this;
		}

		public Criteria andCreattimeIsNotNull() {
			addCriterion("creatTime is not null");
			return this;
		}

		public Criteria andCreattimeEqualTo(Date value) {
			addCriterion("creatTime =", value, "creattime");
			return this;
		}

		public Criteria andCreattimeNotEqualTo(Date value) {
			addCriterion("creatTime <>", value, "creattime");
			return this;
		}

		public Criteria andCreattimeGreaterThan(Date value) {
			addCriterion("creatTime >", value, "creattime");
			return this;
		}

		public Criteria andCreattimeGreaterThanOrEqualTo(Date value) {
			addCriterion("creatTime >=", value, "creattime");
			return this;
		}

		public Criteria andCreattimeLessThan(Date value) {
			addCriterion("creatTime <", value, "creattime");
			return this;
		}

		public Criteria andCreattimeLessThanOrEqualTo(Date value) {
			addCriterion("creatTime <=", value, "creattime");
			return this;
		}

		public Criteria andCreattimeIn(List values) {
			addCriterion("creatTime in", values, "creattime");
			return this;
		}

		public Criteria andCreattimeNotIn(List values) {
			addCriterion("creatTime not in", values, "creattime");
			return this;
		}

		public Criteria andCreattimeBetween(Date value1, Date value2) {
			addCriterion("creatTime between", value1, value2, "creattime");
			return this;
		}

		public Criteria andCreattimeNotBetween(Date value1, Date value2) {
			addCriterion("creatTime not between", value1, value2, "creattime");
			return this;
		}

		public Criteria andRecycletimeIsNull() {
			addCriterion("recycleTime is null");
			return this;
		}

		public Criteria andRecycletimeIsNotNull() {
			addCriterion("recycleTime is not null");
			return this;
		}

		public Criteria andRecycletimeEqualTo(Date value) {
			addCriterion("recycleTime =", value, "recycletime");
			return this;
		}

		public Criteria andRecycletimeNotEqualTo(Date value) {
			addCriterion("recycleTime <>", value, "recycletime");
			return this;
		}

		public Criteria andRecycletimeGreaterThan(Date value) {
			addCriterion("recycleTime >", value, "recycletime");
			return this;
		}

		public Criteria andRecycletimeGreaterThanOrEqualTo(Date value) {
			addCriterion("recycleTime >=", value, "recycletime");
			return this;
		}

		public Criteria andRecycletimeLessThan(Date value) {
			addCriterion("recycleTime <", value, "recycletime");
			return this;
		}

		public Criteria andRecycletimeLessThanOrEqualTo(Date value) {
			addCriterion("recycleTime <=", value, "recycletime");
			return this;
		}

		public Criteria andRecycletimeIn(List values) {
			addCriterion("recycleTime in", values, "recycletime");
			return this;
		}

		public Criteria andRecycletimeNotIn(List values) {
			addCriterion("recycleTime not in", values, "recycletime");
			return this;
		}

		public Criteria andRecycletimeBetween(Date value1, Date value2) {
			addCriterion("recycleTime between", value1, value2, "recycletime");
			return this;
		}

		public Criteria andRecycletimeNotBetween(Date value1, Date value2) {
			addCriterion("recycleTime not between", value1, value2, "recycletime");
			return this;
		}

		public Criteria andUseuserIsNull() {
			addCriterion("useUser is null");
			return this;
		}

		public Criteria andUseuserIsNotNull() {
			addCriterion("useUser is not null");
			return this;
		}

		public Criteria andUseuserEqualTo(Integer value) {
			addCriterion("useUser =", value, "useuser");
			return this;
		}

		public Criteria andUseuserNotEqualTo(Integer value) {
			addCriterion("useUser <>", value, "useuser");
			return this;
		}

		public Criteria andUseuserGreaterThan(Integer value) {
			addCriterion("useUser >", value, "useuser");
			return this;
		}

		public Criteria andUseuserGreaterThanOrEqualTo(Integer value) {
			addCriterion("useUser >=", value, "useuser");
			return this;
		}

		public Criteria andUseuserLessThan(Integer value) {
			addCriterion("useUser <", value, "useuser");
			return this;
		}

		public Criteria andUseuserLessThanOrEqualTo(Integer value) {
			addCriterion("useUser <=", value, "useuser");
			return this;
		}

		public Criteria andUseuserIn(List values) {
			addCriterion("useUser in", values, "useuser");
			return this;
		}

		public Criteria andUseuserNotIn(List values) {
			addCriterion("useUser not in", values, "useuser");
			return this;
		}

		public Criteria andUseuserBetween(Integer value1, Integer value2) {
			addCriterion("useUser between", value1, value2, "useuser");
			return this;
		}

		public Criteria andUseuserNotBetween(Integer value1, Integer value2) {
			addCriterion("useUser not between", value1, value2, "useuser");
			return this;
		}

		public Criteria andSenduserIsNull() {
			addCriterion("sendUser is null");
			return this;
		}

		public Criteria andSenduserIsNotNull() {
			addCriterion("sendUser is not null");
			return this;
		}

		public Criteria andSenduserEqualTo(Integer value) {
			addCriterion("sendUser =", value, "senduser");
			return this;
		}

		public Criteria andSenduserNotEqualTo(Integer value) {
			addCriterion("sendUser <>", value, "senduser");
			return this;
		}

		public Criteria andSenduserGreaterThan(Integer value) {
			addCriterion("sendUser >", value, "senduser");
			return this;
		}

		public Criteria andSenduserGreaterThanOrEqualTo(Integer value) {
			addCriterion("sendUser >=", value, "senduser");
			return this;
		}

		public Criteria andSenduserLessThan(Integer value) {
			addCriterion("sendUser <", value, "senduser");
			return this;
		}

		public Criteria andSenduserLessThanOrEqualTo(Integer value) {
			addCriterion("sendUser <=", value, "senduser");
			return this;
		}

		public Criteria andSenduserIn(List values) {
			addCriterion("sendUser in", values, "senduser");
			return this;
		}

		public Criteria andSenduserNotIn(List values) {
			addCriterion("sendUser not in", values, "senduser");
			return this;
		}

		public Criteria andSenduserBetween(Integer value1, Integer value2) {
			addCriterion("sendUser between", value1, value2, "senduser");
			return this;
		}

		public Criteria andSenduserNotBetween(Integer value1, Integer value2) {
			addCriterion("sendUser not between", value1, value2, "senduser");
			return this;
		}

		public Criteria andMarksIsNull() {
			addCriterion("marks is null");
			return this;
		}

		public Criteria andMarksIsNotNull() {
			addCriterion("marks is not null");
			return this;
		}

		public Criteria andMarksEqualTo(String value) {
			addCriterion("marks =", value, "marks");
			return this;
		}

		public Criteria andMarksNotEqualTo(String value) {
			addCriterion("marks <>", value, "marks");
			return this;
		}

		public Criteria andMarksGreaterThan(String value) {
			addCriterion("marks >", value, "marks");
			return this;
		}

		public Criteria andMarksGreaterThanOrEqualTo(String value) {
			addCriterion("marks >=", value, "marks");
			return this;
		}

		public Criteria andMarksLessThan(String value) {
			addCriterion("marks <", value, "marks");
			return this;
		}

		public Criteria andMarksLessThanOrEqualTo(String value) {
			addCriterion("marks <=", value, "marks");
			return this;
		}

		public Criteria andMarksLike(String value) {
			addCriterion("marks like", value, "marks");
			return this;
		}

		public Criteria andMarksNotLike(String value) {
			addCriterion("marks not like", value, "marks");
			return this;
		}

		public Criteria andMarksIn(List values) {
			addCriterion("marks in", values, "marks");
			return this;
		}

		public Criteria andMarksNotIn(List values) {
			addCriterion("marks not in", values, "marks");
			return this;
		}

		public Criteria andMarksBetween(String value1, String value2) {
			addCriterion("marks between", value1, value2, "marks");
			return this;
		}

		public Criteria andMarksNotBetween(String value1, String value2) {
			addCriterion("marks not between", value1, value2, "marks");
			return this;
		}

		public Criteria andRecyleIsNull() {
			addCriterion("recyle is null");
			return this;
		}

		public Criteria andRecyleIsNotNull() {
			addCriterion("recyle is not null");
			return this;
		}

		public Criteria andRecyleEqualTo(String value) {
			addCriterion("recyle =", value, "recyle");
			return this;
		}

		public Criteria andRecyleNotEqualTo(String value) {
			addCriterion("recyle <>", value, "recyle");
			return this;
		}

		public Criteria andRecyleGreaterThan(String value) {
			addCriterion("recyle >", value, "recyle");
			return this;
		}

		public Criteria andRecyleGreaterThanOrEqualTo(String value) {
			addCriterion("recyle >=", value, "recyle");
			return this;
		}

		public Criteria andRecyleLessThan(String value) {
			addCriterion("recyle <", value, "recyle");
			return this;
		}

		public Criteria andRecyleLessThanOrEqualTo(String value) {
			addCriterion("recyle <=", value, "recyle");
			return this;
		}

		public Criteria andRecyleLike(String value) {
			addCriterion("recyle like", value, "recyle");
			return this;
		}

		public Criteria andRecyleNotLike(String value) {
			addCriterion("recyle not like", value, "recyle");
			return this;
		}

		public Criteria andRecyleIn(List values) {
			addCriterion("recyle in", values, "recyle");
			return this;
		}

		public Criteria andRecyleNotIn(List values) {
			addCriterion("recyle not in", values, "recyle");
			return this;
		}

		public Criteria andRecyleBetween(String value1, String value2) {
			addCriterion("recyle between", value1, value2, "recyle");
			return this;
		}

		public Criteria andRecyleNotBetween(String value1, String value2) {
			addCriterion("recyle not between", value1, value2, "recyle");
			return this;
		}
	}
}