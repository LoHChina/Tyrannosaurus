package org.lg.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public UserExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	protected UserExample(UserExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table user
	 * @ibatorgenerated  Wed Dec 16 18:30:16 CST 2015
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("userName is null");
			return this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("userName is not null");
			return this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("userName =", value, "username");
			return this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("userName <>", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("userName >", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("userName >=", value, "username");
			return this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("userName <", value, "username");
			return this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("userName <=", value, "username");
			return this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("userName like", value, "username");
			return this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("userName not like", value, "username");
			return this;
		}

		public Criteria andUsernameIn(List values) {
			addCriterion("userName in", values, "username");
			return this;
		}

		public Criteria andUsernameNotIn(List values) {
			addCriterion("userName not in", values, "username");
			return this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("userName between", value1, value2, "username");
			return this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("userName not between", value1, value2, "username");
			return this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("passWord is null");
			return this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("passWord is not null");
			return this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("passWord =", value, "password");
			return this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("passWord <>", value, "password");
			return this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("passWord >", value, "password");
			return this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("passWord >=", value, "password");
			return this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("passWord <", value, "password");
			return this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("passWord <=", value, "password");
			return this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("passWord like", value, "password");
			return this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("passWord not like", value, "password");
			return this;
		}

		public Criteria andPasswordIn(List values) {
			addCriterion("passWord in", values, "password");
			return this;
		}

		public Criteria andPasswordNotIn(List values) {
			addCriterion("passWord not in", values, "password");
			return this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("passWord between", value1, value2, "password");
			return this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("passWord not between", value1, value2, "password");
			return this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return this;
		}

		public Criteria andNameIn(List values) {
			addCriterion("name in", values, "name");
			return this;
		}

		public Criteria andNameNotIn(List values) {
			addCriterion("name not in", values, "name");
			return this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return this;
		}

		public Criteria andCreditIsNull() {
			addCriterion("credit is null");
			return this;
		}

		public Criteria andCreditIsNotNull() {
			addCriterion("credit is not null");
			return this;
		}

		public Criteria andCreditEqualTo(Integer value) {
			addCriterion("credit =", value, "credit");
			return this;
		}

		public Criteria andCreditNotEqualTo(Integer value) {
			addCriterion("credit <>", value, "credit");
			return this;
		}

		public Criteria andCreditGreaterThan(Integer value) {
			addCriterion("credit >", value, "credit");
			return this;
		}

		public Criteria andCreditGreaterThanOrEqualTo(Integer value) {
			addCriterion("credit >=", value, "credit");
			return this;
		}

		public Criteria andCreditLessThan(Integer value) {
			addCriterion("credit <", value, "credit");
			return this;
		}

		public Criteria andCreditLessThanOrEqualTo(Integer value) {
			addCriterion("credit <=", value, "credit");
			return this;
		}

		public Criteria andCreditIn(List values) {
			addCriterion("credit in", values, "credit");
			return this;
		}

		public Criteria andCreditNotIn(List values) {
			addCriterion("credit not in", values, "credit");
			return this;
		}

		public Criteria andCreditBetween(Integer value1, Integer value2) {
			addCriterion("credit between", value1, value2, "credit");
			return this;
		}

		public Criteria andCreditNotBetween(Integer value1, Integer value2) {
			addCriterion("credit not between", value1, value2, "credit");
			return this;
		}

		public Criteria andStateIsNull() {
			addCriterion("state is null");
			return this;
		}

		public Criteria andStateIsNotNull() {
			addCriterion("state is not null");
			return this;
		}

		public Criteria andStateEqualTo(String value) {
			addCriterion("state =", value, "state");
			return this;
		}

		public Criteria andStateNotEqualTo(String value) {
			addCriterion("state <>", value, "state");
			return this;
		}

		public Criteria andStateGreaterThan(String value) {
			addCriterion("state >", value, "state");
			return this;
		}

		public Criteria andStateGreaterThanOrEqualTo(String value) {
			addCriterion("state >=", value, "state");
			return this;
		}

		public Criteria andStateLessThan(String value) {
			addCriterion("state <", value, "state");
			return this;
		}

		public Criteria andStateLessThanOrEqualTo(String value) {
			addCriterion("state <=", value, "state");
			return this;
		}

		public Criteria andStateLike(String value) {
			addCriterion("state like", value, "state");
			return this;
		}

		public Criteria andStateNotLike(String value) {
			addCriterion("state not like", value, "state");
			return this;
		}

		public Criteria andStateIn(List values) {
			addCriterion("state in", values, "state");
			return this;
		}

		public Criteria andStateNotIn(List values) {
			addCriterion("state not in", values, "state");
			return this;
		}

		public Criteria andStateBetween(String value1, String value2) {
			addCriterion("state between", value1, value2, "state");
			return this;
		}

		public Criteria andStateNotBetween(String value1, String value2) {
			addCriterion("state not between", value1, value2, "state");
			return this;
		}

		public Criteria andDepartIsNull() {
			addCriterion("depart is null");
			return this;
		}

		public Criteria andDepartIsNotNull() {
			addCriterion("depart is not null");
			return this;
		}

		public Criteria andDepartEqualTo(String value) {
			addCriterion("depart =", value, "depart");
			return this;
		}

		public Criteria andDepartNotEqualTo(String value) {
			addCriterion("depart <>", value, "depart");
			return this;
		}

		public Criteria andDepartGreaterThan(String value) {
			addCriterion("depart >", value, "depart");
			return this;
		}

		public Criteria andDepartGreaterThanOrEqualTo(String value) {
			addCriterion("depart >=", value, "depart");
			return this;
		}

		public Criteria andDepartLessThan(String value) {
			addCriterion("depart <", value, "depart");
			return this;
		}

		public Criteria andDepartLessThanOrEqualTo(String value) {
			addCriterion("depart <=", value, "depart");
			return this;
		}

		public Criteria andDepartLike(String value) {
			addCriterion("depart like", value, "depart");
			return this;
		}

		public Criteria andDepartNotLike(String value) {
			addCriterion("depart not like", value, "depart");
			return this;
		}

		public Criteria andDepartIn(List values) {
			addCriterion("depart in", values, "depart");
			return this;
		}

		public Criteria andDepartNotIn(List values) {
			addCriterion("depart not in", values, "depart");
			return this;
		}

		public Criteria andDepartBetween(String value1, String value2) {
			addCriterion("depart between", value1, value2, "depart");
			return this;
		}

		public Criteria andDepartNotBetween(String value1, String value2) {
			addCriterion("depart not between", value1, value2, "depart");
			return this;
		}
	}
}